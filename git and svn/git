
1. git 查看当前git仓库地址

$ git remote -v
origin  git@10.0.1.115:zixun.git (fetch)
origin  git@10.0.1.115:zixun.git (push)


2. 迁git库到本地目录

              仓库地址                  本地目录
git clone git@10.0.1.15:huodong.500.com.git huodong.500.com


3. linux搭建git服务器

	1. 安装git: yum install git

	2. 创建git用户组 useradd git

	3. 在/home/git/ 下创建文件夹 test.git

	4. 改变文件夹的用户所属 chown -R git:git test.git

	5. git init --bare test.git   这样就创建了一个git服务

	6. 在window上迁库git clone git@:10.0.1.15:test.git

		因为git可以采用ssh协议
		git@:10.0.1.15:test.git ------>  (linux用户)@:(服务IP地址):(linux用户路径下的文件夹)

		如果是www用户,git仓库地址可以为:
		www@10.0.1.15:git/test.git

	7. 在window迁库之后添加文件index.html -> git add index.html -> git commit -m"test" -> git push
	在另一个仓库下git fetch origin  -> git merge origin/master 

4. git command

	1. git bash 支持中文 --> git config --global core.quotepath false

	2. git diff 对比文件修改

	3. 直接删除.git就可以脱离原来的分支

	4. git 版本1.7 后  sparse checkout 支持clone某个目录

5. jenkins
	
	Jenkins 是一个可扩展的持续集成引擎。

	可用于持续、自动地构建/测试软件项目。监控一些定时执行的任务。

	tmd 就是一个发代码的工具

	linux 上搭建jenkins教程  -> https://www.jianshu.com/p/c517f09df025    jenkins软件 -->https://pkg.jenkins.io/redhat-stable/jenkins-2.164.3-1.1.noarch.rpm

	本地jenkins 结合 git仓库 --- http://10.0.1.115:8001/jenkins/


	首页创建一个新的项目后。需要添加配置

		1. 添加git仓库地址: repository url ->git@10.0.0.138:admin.sanyol.cn.git

		2. 添加credentials: 因为git用ssh登录，添加凭据的类型选择 SSH username with private key

		username: git 

		passphrase: 123456

		3. jenkins 配置git仓库的时候 git地址通过http访问 添写http://gitlab.boss.com/ME/admin.sanyol.cn.git   添加凭据的类型选择 username with password 

		name: xiaoxx 密码: 0123456789

		#!/bin/bash 
		yarn install
		npm run build:local	
		tar --exclude node_modules --exclude mock --exclude config  --exclude src --exclude a.sanyol.cn.tar.gz -zcf a.sanyol.cn.tar.gz *
		sshpass -p 123456 scp a.sanyol.cn.tar.gz nodejs@10.0.0.138:~/tmp/a.sanyol.cn.tar.gz
		sshpass -p 123456 ssh nodejs@10.0.0.138 'cd ~/a.sanyol.cn && npm run clean && tar -zxf ~/tmp/a.sanyol.cn.tar.gz -C .'

6. 创建SSH keys
	
	1. git bash   里面 ssh-keygen -t rsa -C "xiaoxx@500wan.com"

	2. 查看ssh公钥  cat ~/.ssh/id_rsa.pub           Enter passphrase for key '/c/Users/Administrator/.ssh/id_rsa':  密码:  gitkey

	3. gitlab.boss.com  用户名: xiaoxx -> 0123456789


7. git branch

	1. 新建分支并且切换到该分支 ---> git branch dev && git checkout dev  || git checkout -b dev 

	2. 查看本地分支 git branch, 查看本地和远程分支 git branch -a 
		dev
		dev1
		dev2
	  * dev3    -- 带有 * 号表示当前分支
		master
		test
		remotes/origin/dev          -- 含有remotes 表示远程分支
		remotes/origin/master
	    remotes/origin/test

	3. 删除本地分支   git branch -d [branchname]

	4. 新建远程test分支（要在本地新建test分支）  git push origin test:test 

	5. 删除远程分支  git push origin -d test

9. 合并代码 

	1. git merge brachname 合并brachname到当前目录

	2. git cherry-pick commitid  合并到具体某个提交id

	3. git checkout -b branch commitid2 && git rebase --onto master commitid1 从commitid1 合并到commit2

10. git push

	1. git push origin master 当前master分支提交到远程master分支上

	2. git push --set-upstream origin master 当前分支与远程origin/master分支建立联系，之后git push就默认提交到origin master 分支上了。

11. git项目合作开发

	1. linux 搭建git服务器 git init --bare

	2. 开发者 git clone 远程仓库代码

	3. git add && git commit && git push origin master 提交代码到远程仓库,提交之前需要git fetch && git merge 别人改过的代码

	4. 多人协作 git branch dev && git checkout dev  && git push origin dev:dev 创建一个开发分支，开发者都在这个分支上开发。

	5. 只能在master 主分支上发代码, 所以要在本地 master分支合并dev分支的代码再提交代码 git checkout master && git merge dev && git push origin master

	6. origin 分支有是三个 dev,build,master dev 是开发提交的分支，build是开发确认后提交给测试的分支，master测试确认没问题发代码的分支。
