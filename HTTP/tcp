TCP/IP


1. 计算机网络体系结构分层
	
	7层OSI模型              4层TCP/IP协议                 功能                             TCP/IP协议簇

		应用层					应用层                   数据转换+加密               FTP(21) SSH(22) HTTP(80) DNS(53) Telnet(23) SMTP(25)
		表示层					
		会话层					传输层                   建立连接                         TCP UDP
		传输层
		网络层                   网络层                   路由选择                         IP ARP
		数据链路层
		物理层                   链路层                   二进制数据传输

2. 数据处理过程
		
		client                                                             server

	'hello world'                                   应用层               'hello world'

	'hello world' + TCP首部                          传输层               解析TCP包

	'hello world' + TCP首部 + IP包                   网络层               解析IP包

	'hello world' + TCP首部 + IP包 + 以太网包首部     链路层               解析以太网包


3. port

	3.1 port 端口号
		链路层和IP中的地址是指MAC地址和IP地址。MAC地址来标识不同的计算机，IP地址用来识别网络主机和路由器。
		而端口号就是失败同一个计算机上的不同应用。

	3.2 源IP + 目标IP + 传输协议 + 源端口 + 目标端口 + 数据来识别一个应用。

 	3.3 固定端口port FTP(21) SSH(22) HTTP(80) DNS(53) Telnet(23) SMTP(25)，随机端口由系统进行分配

 4. TCP

 	4.1 TCP是一种面向连接的、可靠的、基于字节流的协议。

 	4.2 三次握手

 		TCP是面向有连接的通信传输，面向连接是指在数据通信之前做好端到端的确认。

 		三次握手是指TCP建立连接的时客户端和服务器端总共要发送三个包以确认连接的建立。


 				client                           server
 							SYN=1,seq=x;
 			你听的到吗？        ----->	         哦，你要和我打电话。 识别SYN=1
 												是的，我听得到，你听得到我说话？
 						SYN=1,ACK=1,ack=x+1,seq=y;
 							   <-----
 			嗯好的，我也听得到
 								ACK=1,ack=y+1
 								----->

 		过程：
 			第一次，客户端将SYN=1,随机数据seq=x数据包发送给服务器。客户端进入SYN_SENT状态，等待服务器回复。

 			第二次，服务器端根据数据包的SYN=1，知道客户端请求建立连接，服务器建SYN=1,ACK=1，ack=x+1,seq=y发给客户端。服务端进入SYN_RCVD状态

 			第三次 客户端收到ACK=1，SYN=1确认可以连接，将ACK=1，ack=y+1发送服务器端，服务端检测到ACK=1,ack=y+1后表示连接建立成，客户端和服务器端可以开始传输数据。

 	4.3 四次挥手

 		四次挥手表示终止TCP连接，断开TCP连接需要客户端和服务器端发送四个包以确认连接的断开。

 				client                                                    server
 											FIN=1;
 			我已经传完了，我可以断开接连了    ------>                          好吧。

 											ACK=1；
 											<------

 											FIN=1;                          我也要断开了
 											<------                                


 			好的，你可以断开了               ACK=1;
 										   ------>                       OK,我close
				
			wait 2MSL(max segment lifetime)
			.... 我也close

	4.4 通过序列号和确认回答提高可靠性

		序列号是按照顺序给要发的数据的每个字节都标上编号。

		确认回答是服务器端接收到数据都会返回个已收到的消息通知到客户端。

		服务端接受到客户端传来的数据后，将下一步要接受的序列号和确认回答进行返回。从而实现了可靠性传输。

			client     ----->   server
						data(0,1000)
					   <-----
					   	ACK,1001	
	4.5 重发控制

		当客户端没有接收到服务器端返回的确认应答和序列号就需要重新发送数据。

		重发超时表示客户端等待服务器返回确认应答和序列号的时间，如果等待超过了这个时间就会进行重发

		数据重发超过一定的次数后不再会重发，而是强制断开连接。

5. UDP

	UDP是面向无连接、不可靠、数据报长度有限的协议。目前用户DNS等等。

	UDP无法顺序传输、重发机制。


6. IP

	6.1 IP在TCP/IP协议簇的网络层，网络层的作用是实现终端节点之间的通信。

	6.2 IP大致分为三大作用模块，IP寻址、路由、IP分包组包。

	6.3 IP地址用于连接到网络中所有主机识别出进行通信的目标地址。

	6.4 路由控制表中记录着网络地址与下一步应该发送至路由器的地址。

