http

1. 定义
	
	http协议即超文本传送协议(Hyper Text Transfer Protocol)，建议在TCP协议上用于在客户端与web服务器通信的应用层协议。

	URL在浏览器上输入的地址（uniform resource locater）统一资源定位符

2. http过程

	client                       server
				request
			    ------->
			    <-------
			    response

	2.1 根据TCP/IP协议建立TCP连接，设置端口为80。

	2.2 建立连接后客户端会发送一个请求(request)：请求命令GET index.html HTTP/1.1和Useragent/Origin/Accept等请求头信息。

	2.3 服务器收到请求后，根据请求信息进行响应(response): HTTP/1.1 200 OK和 Content-type/cache-control/等响应头信息。

	2.4 服务器按照和客户端约定的Content-Type数据格式将数据发送到客户端。

	2.5 数据传输完成后，双方断开TCP连接。

3. HTTP协议

	3.1 通过请求和响应进行通信，客户端发起请求，服务器才会响应。

	3.2 HTTP是不保存状态的协议，不对请求和响应之前的通信状态进行保存。于是引入cookie技术进行管理HTTP状态

	3.4 cookie状态管理，客户端发送请求到服务端后。服务端会返回一个Set-Cookie首部字段信息，客户端接收到后进行保存。
		下次请求的时候在报文中加入cookie再发送。服务器接收cookie后便可识别到之前的状态信息。

	3.5 HTTP请求方法

		GET: 用来访问服务器上的资源，也可以用来传输资源。但是数据默认添加到url上，传输数据少也会不安全

		POST： 用来传输资源到服务器上。传输的资源添加到http body里，传输数据多，并且相对GET安全

		HEAD: 用来访问服务器的资源，在服务响应的时候不返回数据只访问响应头。常用来查看服务器的性能

		PUT: 传输文件

		DELETE: 删除指定资源

		OPTIONS: 查询针对请求URL指定的资源支持的方法。常出现在当ajax请求为跨域并且是复杂请求时，浏览器会默认发送一个options请求询问服务器支持客户端请求的方法。

		TRACE： 请求服务器回显其收到的请求信息，常用于HTTP请求的测试和诊断

		CONNECT: 要求在和代理服务器通信时建立隧道，实现用隧道协议进场TCP通信。主要使用SSL和TSL协议吧通信内容加密经过网络隧道传输。

4. HTTP报文
	
	4.1 HTTP报文可分为报文首部和报文主体两部分

	request: POST /index.html HTTP/1.1          -- 请求行

			Content-Type: application/x-www-for-urlencoded

			Host: baidu.com                -- 请求首部

			Origin: baidu.com

			username=xiaoxx&paword=123456   -- 请求主体

	response: HTTP/1.1 200 OK              -- 响应行

			Content-Length: 256
			Content-Type: text/html         -- 响应首部

			'{user:xiaoxx,password:123456}'   -- 响应主体

	4.2 HTTP 报文首部字段

		4.2.1 报文首部字段结构
			报文首部字段是由首部字段名和字段值构成的，中间使用冒号":"分隔。

			HTTP首部字段可以有多个值

			报文首部如果存在两个或以上的相同的首部字段名时，不同浏览器有不同的处理逻辑。大多数情况下是都不生效。

				首部字段名                   冒号                    字段值

				Content-Type                 :                       text/html; charset=UTF-8

				Connection                   :                        keep-alive
		
		4.2.2 首部字段类型

			通用首部字段                          请求报文和响应报文都会使用

			请求首部字段						     客户端向服务端发送请求的请求报文首部

			响应首部字段						     服务端向客户端返回的响应报文首部

			实体首部字段							 针对请求报文和响应报文的实体部分使用	


		4.2.3 通用首部字段（HTTP/1.1）

			Cache-Control                            控制缓存行为

			Connection                               TCP连接的管理

			Date 									 创建报文的日期时间
 
			Pragma                                   报文指令

			Transfer-Encoding                        指定报文主体的传输编码方式

			Upgrade									 升级为其他协议

			Via										 代理服务器的相关信息

			Warning									 错误通知


			Cache-Control（详见浏览器缓存）




1. Keep-Alive (http1.1)

页面的每次请求都会建立一次HTTP连接，也就是常说的3次握手4次挥手。

keep-alive解决的问题是: 在一定时间内，同一域名的多次请求数据，只建立一次HTTP请求。其他请求可复用第一次建立的连接通道。(时间是可配置的)。


2 多路复用 (http2.0)

http1.1存在的问题(串行的文件传输)、(连接数过多) 因为浏览器的限制，一般浏览器发起的最大请求数为6。


HTTP1.1版的数据是文本，也可以是二进制。HTTP2请求的TCP CONNECTION 一旦建立，后续请求又以stream(流)的方式发送

每个stream的基本组成单位都是Frame(二进制帧)，每种frame又分为HEADERS frame和DATA frame

建立TCP连接后，请求是并行处理的。浏览器一旦建立连接， 将会在关闭浏览器的时候才断掉。


3. 头信息压缩

4. 服务器推送



