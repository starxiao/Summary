

route  -- 路由对象 

一个路由对象 (route object) 表示当前激活的路由的状态信息，包含了当前 URL 解析得到的信息，还有 URL 匹配到的路由记录 (route records)。

路由对象是不可变 (immutable) 的，每次成功的导航后都会产生一个新的对象。



路由对象的使用场景

在组件内:  this.$route  这个属性是只读的，但是可以使用watch监测它

在watch:  '$route'

router.match(location)的返回值

导航守卫的参数：router.beforeEach((to,form,next) =>{
	
	to & from 都是路由对象
})


scrollBehavior方法的参数

路由对象的属性

route={
	path,
	params,
	query,
	hash,
	fullPath,
	matched,
	name,
	redirectedFrom
}


导航守卫

	Router的全局钩子
	beforeEach: (to, from, next) => {
		to:    即将渲染的route对象
		from:  上次离开的route对象
		next:  钩子管道

		next()  -> 需要执行route才会更新
	}

	beforeResolve: () => {}

	afterEach: (to, from) => {}

	route钩子

	routes = [
		{
			path: '/foo/:id',
			name: foo,
			component: Foo,
			beforeEnter: (to, from, next) => {
				next() -> 必须要调用
			}
		}
	]

	组件内钩子

	beforeRouteEnter(to, from, next) => {

		//无法获取this对象
		//next 方法必须执行
		next(vm => {
			vm  => 组件内this对象
		});
	}

	beforeRouteUpdate(to, from, next) => {
		能获取this对象
		//next 方法必须执行
	}
	监听url地址search参数变化的方法可以用beforeRouteUpdate或者watch '$route'对象

	beforeRouteLeave(to, from, next) => {
		能获取this对象
		//next 方法必须要执行
	}



